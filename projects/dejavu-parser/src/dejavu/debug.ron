GrammarInfo {
    url: None,
    name: Identifier("Dejavu", 8..14),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Root": GrammarRule {
            name: Identifier("Root", 33..37),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("Element", 44..51),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 44..51),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                        ],
                    },
                },
            },
            range: 21..54,
        },
        "Element": GrammarRule {
            name: Identifier("Element", 62..69),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Text", 94..98),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextMany", 78..86),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Export", 121..127),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateExport", 105..119),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("If", 150..152),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateIf", 134..144),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("For", 175..178),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TemplateFor", 159..170),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 56..180,
        },
        "TextMany": GrammarRule {
            name: Identifier("TextMany", 315..323),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: Identifier("TextElement", 330..341),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextElement", 330..341),
                                boxed: false,
                                inline: false,
                            },
                        },
                        operators: [
RepeatsBetween(
YggdrasilCounter {
min: 1,
max: 4294967295,
},
),
                        ],
                    },
                },
            },
            range: 302..344,
        },
        "TextElement": GrammarRule {
            name: Identifier("TextElement", 351..362),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Escape", 384..390),
                        ),
                        branch: Expression {
tag: None,
remark: true,
                            body: RuleReference {
                                name: Identifier("TEMPLATE_E", 372..382),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextSpace", 409..418),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_SPACE", 397..407),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextWord", 437..445),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TEXT_WORD", 425..434),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 345..447,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 470..480),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"escape",
],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "<%!",
                        insensitive: false,
                        range: 487..492,
                    },
                },
            },
            range: 449..494,
        },
        "TEXT_SPACE": GrammarRule {
            name: Identifier("TEXT_SPACE", 513..523),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/\\p{White_Space}+/",
                        span: 525..543,
                    },
                },
            },
            range: 513..543,
        },
        "TEXT_WORD": GrammarRule {
            name: Identifier("TEXT_WORD", 548..557),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/[^<\\p{White_Space}]+/",
                        span: 560..582,
                    },
                },
            },
            range: 548..582,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 736..746),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"operator",
],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "<%",
                                    insensitive: false,
                                    range: 767..771,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 772..784),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 772..784),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 706..787,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 801..811),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SpaceControl", 818..830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SpaceControl", 818..830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "%>",
                                    insensitive: false,
                                    range: 832..836,
                                },
                            },
                        ],
                    },
                },
            },
            range: 788..838,
        },
        "SpaceControl": GrammarRule {
            name: Identifier("SpaceControl", 845..857),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nothing", 871..878),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "=",
                                insensitive: false,
                                range: 866..869,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break0", 890..896),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "~",
                                insensitive: false,
                                range: 885..888,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Break1", 908..914),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 903..906,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete0", 926..933),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "_",
                                insensitive: false,
                                range: 921..924,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Delete1", 945..952),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: ".",
                                insensitive: false,
                                range: 940..943,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 839..954,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 983..989),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "end",
                        insensitive: false,
                        range: 991..996,
                    },
                },
            },
            range: 983..996,
        },
        "TemplateExport": GrammarRule {
            name: Identifier("TemplateExport", 1130..1144),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
sequence: [
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("TEMPLATE_L", 1153..1163),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                            },
                            Expression {
                                tag: Identifier("exports", 1164..1171),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExportItem", 1172..1182),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1184..1194),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1124..1196,
        },
        "ExportItem": GrammarRule {
            name: Identifier("ExportItem", 1203..1213),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
sequence: [
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("KW_EXPORT", 1222..1231),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                            },
                            Expression {
                                tag: Identifier("name", 1232..1236),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1237..1247),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
sequence: [
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("KW_TO", 1253..1258),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                                                },
                                                Expression {
                                                    tag: Identifier("language", 1259..1267),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 1268..1278),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1286..1291),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_CLASS", 1292..1300),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                                                },
                                                Expression {
                                                    tag: Identifier("class", 1301..1306),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NamepathFree", 1308..1320),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_BY", 1328..1333),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("KW_TRAIT", 1334..1342),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                                                },
                                                Expression {
                                                    tag: Identifier("trait", 1343..1348),
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("NamepathFree", 1349..1361),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1197..1366,
        },
        "KW_EXPORT": GrammarRule {
            name: Identifier("KW_EXPORT", 1395..1404),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "export",
                        insensitive: false,
                        range: 1406..1414,
                    },
                },
            },
            range: 1395..1414,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 1419..1427),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "class",
                        insensitive: false,
                        range: 1429..1436,
                    },
                },
            },
            range: 1419..1436,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 1441..1449),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "trait",
                        insensitive: false,
                        range: 1451..1458,
                    },
                },
            },
            range: 1441..1458,
        },
        "KW_TO": GrammarRule {
            name: Identifier("KW_TO", 1463..1468),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "to",
                        insensitive: false,
                        range: 1470..1474,
                    },
                },
            },
            range: 1463..1474,
        },
        "KW_BY": GrammarRule {
            name: Identifier("KW_BY", 1479..1484),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "by",
                        insensitive: false,
                        range: 1486..1490,
                    },
                },
            },
            range: 1479..1490,
        },
        "TemplateIf": GrammarRule {
            name: Identifier("TemplateIf", 1627..1637),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("IfBegin", 1644..1651),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfBegin", 1644..1651),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElseIf", 1652..1660),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElseIf", 1652..1660),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("IfElse", 1662..1668),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IfElse", 1662..1668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("IfEnd", 1670..1675),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfEnd", 1670..1675),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1614..1677,
        },
        "IfBegin": GrammarRule {
            name: Identifier("IfBegin", 1691..1698),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1705..1715),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1705..1715),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1719..1724),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Expression", 1727..1737),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1727..1737),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1740..1750),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1740..1750),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1751..1758),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1751..1758),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1678..1761,
        },
        "IfElse": GrammarRule {
            name: Identifier("IfElse", 1775..1781),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1788..1798),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1788..1798),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1802..1809),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1812..1822),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1812..1822),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1823..1830),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1823..1830),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1762..1833,
        },
        "IfElseIf": GrammarRule {
            name: Identifier("IfElseIf", 1847..1855),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1862..1872),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1862..1872),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 1876..1883),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IF", 1887..1892),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Expression", 1895..1905),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 1895..1905),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1908..1918),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1908..1918),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 1919..1926),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 1919..1926),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1834..1929,
        },
        "IfEnd": GrammarRule {
            name: Identifier("IfEnd", 1943..1948),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 1955..1965),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 1955..1965),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 1969..1975),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IF", 1979..1984),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 1988..1998),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 1988..1998),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1930..2000,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 2029..2034),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "if",
                        insensitive: false,
                        range: 2036..2040,
                    },
                },
            },
            range: 2029..2040,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 2045..2052),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "else",
                        insensitive: false,
                        range: 2054..2060,
                    },
                },
            },
            range: 2045..2060,
        },
        "TemplateFor": GrammarRule {
            name: Identifier("TemplateFor", 2197..2208),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForBegin", 2215..2223),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForBegin", 2215..2223),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForElse", 2224..2231),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForElse", 2224..2231),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForEnd", 2233..2239),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForEnd", 2233..2239),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2184..2241,
        },
        "ForBegin": GrammarRule {
            name: Identifier("ForBegin", 2255..2263),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
tag: None,
remark: false,
body: ConcatExpression {
sequence: [
Expression {
tag: Identifier("TEMPLATE_L", 2270..2280),
remark: false,
body: RuleReference {
name: Identifier("TEMPLATE_L", 2270..2280),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("KW_FOR", 2288..2294),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
Expression {
tag: None,
remark: false,
body: UnaryExpression {
base: Expression {
tag: Identifier("KW_IN", 2299..2304),
remark: false,
body: RuleReference {
name: Identifier("KW_IN", 2299..2304),
boxed: false,
inline: false,
},
},
operators: [
Negative,
],
},
},
Expression {
tag: Identifier("Pattern", 2305..2312),
remark: false,
body: RuleReference {
name: Identifier("Pattern", 2305..2312),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("KW_IN", 2322..2327),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                            },
                            Expression {
                                tag: Identifier("iterator", 2330..2338),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Expression", 2339..2349),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
sequence: [
Expression {
tag: None,
remark: false,
body: RuleReference {
name: Identifier("KW_IF", 2359..2364),
boxed: false,
inline: false,
},
},
Expression {
tag: None,
remark: false,
body: HIDE,
},
],
},
                                                },
                                                Expression {
                                                    tag: Identifier("condition", 2367..2376),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Expression", 2377..2387),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2396..2406),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2396..2406),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2407..2414),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2407..2414),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2242..2417,
        },
        "ForElse": GrammarRule {
            name: Identifier("ForElse", 2431..2438),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2445..2455),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2445..2455),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 2459..2466),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2469..2479),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2469..2479),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Element", 2480..2487),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Element", 2480..2487),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2418..2490,
        },
        "ForEnd": GrammarRule {
            name: Identifier("ForEnd", 2504..2510),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_L", 2517..2527),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 2517..2527),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 2531..2537),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 2541..2547),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_R", 2551..2561),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 2551..2561),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2491..2563,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 2592..2598),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "for",
                        insensitive: false,
                        range: 2600..2605,
                    },
                },
            },
            range: 2592..2605,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 2610..2615),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [
"keyword",
],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 2617..2621,
                    },
                },
            },
            range: 2610..2621,
        },
        "Pattern": GrammarRule {
            name: Identifier("Pattern", 2749..2756),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
tag: None,
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("BarePattern", 2765..2776),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 2743..2778,
        },
        "BarePattern": GrammarRule {
            name: Identifier("BarePattern", 2785..2796),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2803..2813),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2803..2813),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: ",",
                                                                    insensitive: false,
                                                                    range: 2815..2818,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 2819..2829),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 2819..2829),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ",",
                                            insensitive: false,
                                            range: 2832..2835,
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 1,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2779..2838,
        },
        "Expression": GrammarRule {
            name: Identifier("Expression", 2966..2976),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Term", 2983..2987),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 2983..2987),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ExpressionRest", 2988..3002),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ExpressionRest", 2988..3002),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2960..3005,
        },
        "ExpressionRest": GrammarRule {
            name: Identifier("ExpressionRest", 3012..3026),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Infix", 3033..3038),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Infix", 3033..3038),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Term", 3039..3043),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Term", 3039..3043),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3006..3045,
        },
        "Infix": GrammarRule {
            name: Identifier("Infix", 3052..3057),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Add", 3071..3074),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 3066..3069,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Mul", 3086..3089),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 3081..3084,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3046..3091,
        },
        "Term": GrammarRule {
            name: Identifier("Term", 3098..3102),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Prefix", 3109..3115),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Prefix", 3109..3115),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Atomic", 3117..3123),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Atomic", 3117..3123),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Suffix", 3124..3130),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Suffix", 3124..3130),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3092..3133,
        },
        "Prefix": GrammarRule {
            name: Identifier("Prefix", 3140..3146),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 3160..3163),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 3155..3158,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3134..3165,
        },
        "Suffix": GrammarRule {
            name: Identifier("Suffix", 3172..3178),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Null", 3192..3196),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 3187..3190,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotCall", 3219..3226),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ".",
                                            insensitive: false,
                                            range: 3203..3206,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 3207..3217),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3166..3228,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 3356..3362),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 3435..3442),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 3409..3416),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 3475..3485),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 3449..3459),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 3518..3524),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 3492..3498),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3350..3526,
        },
        "String": GrammarRule {
            name: Identifier("String", 3654..3660),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DoubleQuote", 3678..3689),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3669..3672,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "'",
                                            insensitive: false,
                                            range: 3673..3676,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SingleQuote", 3705..3716),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3696..3699,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "\"",
                                            insensitive: false,
                                            range: 3700..3703,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3648..3718,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 3853..3859),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dec", 3880..3883),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Digits", 3868..3874),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Bin", 3902..3905),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
raw: "/0b/",
                                            span: 3890..3894,
                                        },
                                    },
                                    Expression {
tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("BIN", 3895..3898),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Oct", 3924..3927),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
raw: "/0o/",
                                            span: 3912..3916,
                                        },
                                    },
                                    Expression {
tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OCT", 3917..3920),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hex", 3946..3949),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
raw: "/0x/",
                                            span: 3934..3938,
                                        },
                                    },
                                    Expression {
tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("HEX", 3939..3942),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 3840..3951,
        },
        "Digits": GrammarRule {
            name: Identifier("Digits", 3963..3969),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/(0|[1-9][0-9])(.[0-9]+)?/",
                        span: 3976..4002,
                    },
                },
            },
            range: 3952..4004,
        },
        "Unit": GrammarRule {
            name: Identifier("Unit", 4011..4015),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 4022..4032),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 4022..4032),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 4005..4034,
        },
        "BIN": GrammarRule {
            name: Identifier("BIN", 4047..4050),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/[0-1]+/",
                        span: 4052..4060,
                    },
                },
            },
            range: 4047..4060,
        },
        "OCT": GrammarRule {
            name: Identifier("OCT", 4065..4068),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/[0-7]+/",
                        span: 4070..4078,
                    },
                },
            },
            range: 4065..4078,
        },
        "HEX": GrammarRule {
            name: Identifier("HEX", 4083..4086),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: false,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/[0-9a-fA-F]+/",
                        span: 4088..4102,
                    },
                },
            },
            range: 4083..4102,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 4232..4244),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4263..4273),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4263..4273),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: ".",
                                                                                insensitive: false,
                                                                                range: 4276..4279,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: YggdrasilText {
                                                                                text: "::",
                                                                                insensitive: false,
                                                                                range: 4282..4286,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4288..4298),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4288..4298),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4226..4302,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 4309..4317),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4324..4334),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4324..4334),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "::",
                                                                    insensitive: false,
                                                                    range: 4336..4340,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 4341..4351),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 4341..4351),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
RepeatsBetween(
YggdrasilCounter {
min: 0,
max: 4294967295,
},
),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4303..4355,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 4362..4372),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/[_\\p{XID_start}]\\p{XID_continue}*/",
                        span: 4379..4414,
                    },
                },
            },
            range: 4356..4416,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 4423..4430),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 4448..4452),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 4439..4445,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 4468..4473),
                        ),
                        branch: Expression {
tag: None,
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 4459..4466,
                            },
                        },
                    },
                ],
refined: {},
            },
            range: 4417..4475,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 4610..4620),
            redirect: None,
            attributes: GrammarRuleAttributes {
document: "",
derives: RuleDerive {
derives: {},
},
atomic: Optimized,
inline: false,
viewer: GrammarViewer {
hidden: false,
styles: [],
railway: true,
},
captures: true,
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
raw: "/\\p{White_Space}+/",
                        span: 4627..4645,
                    },
                },
            },
            range: 4597..4647,
        },
    },
    token_sets: {},
    functions: {},
}